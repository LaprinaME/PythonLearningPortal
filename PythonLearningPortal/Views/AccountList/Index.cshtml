@model List<PythonLearningPortal.Models.Аккаунты>

@{
    ViewData["Title"] = "Список аккаунтов";
}
<!DOCTYPE html>
<html>
<head>
    <title>@ViewData["Title"]</title>
    <style>
        body {
            background: linear-gradient(135deg, #00ff9b, #ffcd3c);
            font-family: Arial, sans-serif;
        }

        h1 {
            color: #fff;
            text-align: center;
            padding: 20px 0;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            border: 5px solid #fff;
            border-radius: 10px;
        }

        th, td {
            padding: 10px;
            text-align: center;
        }

        thead {
            background-color: #fff;
            color: #333;
        }

        tbody tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        tbody tr:hover {
            background-color: #ddd;
        }

        button {
            display: block;
            width: 100%;
            padding: 10px;
            border: none;
            border-radius: 5px;
            background-color: #333;
            color: #fff;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

            button:hover {
                background-color: #555;
            }

        .button-container {
            text-align: center;
            margin-top: 20px;
            width: 200px;
            height: 40px;
            margin: 0 auto;
        }

        .return-button {
            padding: 8px 16px;
            width: 100%;
            height: 100%;
            background: linear-gradient(135deg, #FFC0CB, #FFD700, #90EE90, #87CEFA, #9370DB, #FFA07A, #FA8072);
            color: #fff;
            border: 2px solid #555;
            border-radius: 5px;
            cursor: pointer;
            transition: background 0.5s;
            margin-top: 50px;
        }

            .return-button:hover {
                background-size: 400% 400%;
            }

        .modal {
            display: none;
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0,0,0,0.4);
        }

        .modal-content {
            background-color: #fefefe;
            margin: 15% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 80%;
        }

        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

            .close:hover,
            .close:focus {
                color: black;
                text-decoration: none;
                cursor: pointer;
            }

        form {
            margin-bottom: 20px;
            text-align: center;
        }

            form div {
                margin: 10px 0;
            }

            form label {
                margin-right: 10px;
            }

            form input[type="text"],
            form input[type="number"] {
                width: 300px;
                height: 40px;
                padding: 10px;
                font-size: 16px;
                border: 1px solid #ccc;
                border-radius: 5px;
            }

            form button {
                padding: 10px 20px;
                width: auto;
                background-color: #333;
                color: #fff;
                border: none;
                border-radius: 5px;
                cursor: pointer;
            }

                form button:hover {
                    background-color: #555;
                }
        /* Стили для якорей */
        .anchor {
            position: fixed;
            bottom: 20px;
            right: 20px;
            width: 50px;
            height: 50px;
            background: linear-gradient(135deg, rgba(255, 192, 203, 0.7), rgba(255, 215, 0, 0.7), rgba(144, 238, 144, 0.7), rgba(135, 206, 250, 0.7), rgba(147, 112, 219, 0.7), rgba(255, 160, 122, 0.7), rgba(250, 128, 114, 0.7));
            color: #fff;
            border: none;
            border-radius: 50%;
            cursor: pointer;
            z-index: 9999;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 24px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1), 0 1px 3px rgba(0, 0, 0, 0.08);
            transition: background 0.3s, box-shadow 0.3s;
        }

            .anchor:hover {
                box-shadow: 0 6px 8px rgba(0, 0, 0, 0.2), 0 2px 4px rgba(0, 0, 0, 0.15);
            }

            .anchor:active {
                box-shadow: 0 3px 5px rgba(0, 0, 0, 0.2), 0 1px 2px rgba(0, 0, 0, 0.15);
            }

        .anchor-up {
            bottom: auto;
            top: 20px;
        }

        .anchor svg {
            fill: #fff; /* Цвет стрелочек */
            width: 24px;
            height: 24px;
        }
    </style>
</head>
<body>
    @section Header {
        <header>
            <h1>Учебник Python</h1>
            <div class="header-buttons">
                <div class="button-container">
                    <form method="get" action="/Home/Index">
                        <button type="submit" class="return-button">Вернуться на главную</button>
                    </form>
                </div>
                <div class="button-container">
                    <form method="get" action="/MenuAdmin/Index">
                        <button type="submit" class="return-button">Вернуться в меню администратора</button>
                    </form>
                </div>
            </div>
        </header>
    }
    <h1>@ViewData["Title"]</h1>

    <form method="get" action="/AccountList/Index">
        <div>
            <label for="filter">Фильтр по логину:</label>
            <input type="text" id="filter" name="filter" placeholder="Введите часть логина, например, 'user'" value="@Context.Request.Query["filter"]" />
        </div>
        <div>
            <label for="length">Максимальная длина логина:</label>
            <input type="number" id="length" name="length" placeholder="Введите максимальную длину логина" value="@Context.Request.Query["length"]" />
        </div>
        <button type="submit">Применить фильтр</button>
    </form>

    <table class="table">
        <thead>
            <tr>
                <th>Код аккаунта</th>
                <th>Логин</th>
                <th>Пароль</th>
                <th>Роль</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var account in Model)
            {
                <tr class="account-row" data-login="@account.Логин" data-password="@account.Пароль" data-role="@account.Роли.Название_роли">
                    <td>@account.Код_аккаунта</td>
                    <td>@account.Логин</td>
                    <td>@account.Пароль</td>
                    <td>@account.Роли.Название_роли</td>
                </tr>
            }
        </tbody>
    </table>

    <div id="myModal" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <h2 id="modal-login"></h2>
            <p id="modal-password"></p>
            <p id="modal-role"></p>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', (event) => {
            const rows = document.querySelectorAll('.account-row');
            const modal = document.getElementById('myModal');
            const modalLogin = document.getElementById('modal-login');
            const modalPassword = document.getElementById('modal-password');
            const modalRole = document.getElementById('modal-role');
            const span = document.getElementsByClassName('close')[0];

            rows.forEach(row => {
                row.addEventListener('click', () => {
                    const login = row.getAttribute('data-login');
                    const password = row.getAttribute('data-password');
                    const role = row.getAttribute('data-role');
                    modalLogin.textContent = "Логин: " + login;
                    modalPassword.textContent = "Пароль: " + password;
                    modalRole.textContent = "Роль: " + role;
                    modal.style.display = "block";
                });
            });

            span.onclick = function () {
                modal.style.display = "none";
            }

            window.onclick = function (event) {
                if (event.target == modal) {
                    modal.style.display = "none";
                }
            }
        });
    </script>
    <a href="#" class="anchor anchor-up" onclick="scrollToTop()">&uarr;</a>

    <script>
        function scrollToTop() {
            window.scrollTo({
                top: 0,
                behavior: 'smooth'
            });
        }
    </script>
    <a href="#" class="anchor anchor-up" onclick="scrollToTop()">&uarr;</a>
    <a href="#bottom" class="anchor anchor-down" onclick="scrollToBottom()">&darr;</a>

    <script>
        function scrollToTop() {
            window.scrollTo({
                top: 0,
                behavior: 'smooth'
            });
        }

        function scrollToBottom() {
            const bottom = document.getElementById('bottom');
            bottom.scrollIntoView({ behavior: 'smooth' });
        }
    </script>
    <a id="bottom"></a>
</body>
</html>
